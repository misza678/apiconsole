// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using consolestoreapi.Models;

namespace apiconsole.Migrations
{
    [DbContext(typeof(ConsoleStoreDbContext))]
    [Migration("20211212150256_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("apiconsole.Models.CollectionCentre.CollectionItem", b =>
                {
                    b.Property<int>("CollectionItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("ImageId")
                        .HasColumnType("int");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductToViewId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsToViewModlesToViewId")
                        .HasColumnType("int");

                    b.Property<bool>("WithController")
                        .HasColumnType("bit");

                    b.HasKey("CollectionItemId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductsToViewModlesToViewId");

                    b.ToTable("CollectionItem");
                });

            modelBuilder.Entity("apiconsole.Models.CollectionCentre.Images", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("apiconsole.Models.ProductsToView", b =>
                {
                    b.Property<int>("ModlesToViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DefectType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MainProductsToViewId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PhotoSRC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModlesToViewId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MainProductsToViewId");

                    b.ToTable("ProductsToView");
                });

            modelBuilder.Entity("apiconsole.Models.Repair.Defect", b =>
                {
                    b.Property<int>("DefectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DefectType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("DefectId");

                    b.ToTable("Defect");
                });

            modelBuilder.Entity("apiconsole.Models.Repair.MainProductsToView", b =>
                {
                    b.Property<int>("ProductsToViewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("PhotoSRC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductsToViewId");

                    b.HasIndex("CompanyId");

                    b.ToTable("MainProductToView");
                });

            modelBuilder.Entity("apiconsole.Models.ShippingMetod", b =>
                {
                    b.Property<int>("ShippingMetodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoSRC")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShippingMetodId");

                    b.ToTable("ShippingMetod");
                });

            modelBuilder.Entity("consolestoreapi.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("FlatNumber")
                        .HasColumnType("int");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("AddressID");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("consolestoreapi.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("consolestoreapi.Models.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CompanyId");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("consolestoreapi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("CustomerId");

                    b.HasIndex("AddressID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("consolestoreapi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FullPrice")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("OrdersProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("consolestoreapi.Models.OrdersProducts", b =>
                {
                    b.Property<int>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("OrderProductId");

                    b.HasIndex("OrderId")
                        .IsUnique();

                    b.HasIndex("ProductId");

                    b.ToTable("OrdersProducts");
                });

            modelBuilder.Entity("consolestoreapi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("consolestoreapi.Models.Repair", b =>
                {
                    b.Property<int>("RepairId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("DefectId")
                        .HasColumnType("int");

                    b.Property<int>("DefefectId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(6,2)");

                    b.Property<int>("ProductToViewId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductsToViewModlesToViewId")
                        .HasColumnType("int");

                    b.Property<int>("ShippingMetodId")
                        .HasColumnType("int");

                    b.HasKey("RepairId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("DefectId");

                    b.HasIndex("ProductsToViewModlesToViewId");

                    b.HasIndex("ShippingMetodId");

                    b.ToTable("Repair");
                });

            modelBuilder.Entity("apiconsole.Models.CollectionCentre.CollectionItem", b =>
                {
                    b.HasOne("consolestoreapi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiconsole.Models.ProductsToView", "ProductsToView")
                        .WithMany()
                        .HasForeignKey("ProductsToViewModlesToViewId");

                    b.Navigation("Customer");

                    b.Navigation("ProductsToView");
                });

            modelBuilder.Entity("apiconsole.Models.ProductsToView", b =>
                {
                    b.HasOne("consolestoreapi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiconsole.Models.Repair.MainProductsToView", "MainProductsToView")
                        .WithMany()
                        .HasForeignKey("MainProductsToViewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("MainProductsToView");
                });

            modelBuilder.Entity("apiconsole.Models.Repair.MainProductsToView", b =>
                {
                    b.HasOne("consolestoreapi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("consolestoreapi.Models.Customer", b =>
                {
                    b.HasOne("consolestoreapi.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("consolestoreapi.Models.Order", b =>
                {
                    b.HasOne("consolestoreapi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("consolestoreapi.Models.OrdersProducts", b =>
                {
                    b.HasOne("consolestoreapi.Models.Order", "Order")
                        .WithOne("OrdersProducts")
                        .HasForeignKey("consolestoreapi.Models.OrdersProducts", "OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("consolestoreapi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("consolestoreapi.Models.Product", b =>
                {
                    b.HasOne("consolestoreapi.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("consolestoreapi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("consolestoreapi.Models.Repair", b =>
                {
                    b.HasOne("consolestoreapi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("apiconsole.Models.Repair.Defect", "Defect")
                        .WithMany()
                        .HasForeignKey("DefectId");

                    b.HasOne("apiconsole.Models.ProductsToView", "ProductsToView")
                        .WithMany()
                        .HasForeignKey("ProductsToViewModlesToViewId");

                    b.HasOne("apiconsole.Models.ShippingMetod", "ShippingMetod")
                        .WithMany()
                        .HasForeignKey("ShippingMetodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Defect");

                    b.Navigation("ProductsToView");

                    b.Navigation("ShippingMetod");
                });

            modelBuilder.Entity("consolestoreapi.Models.Order", b =>
                {
                    b.Navigation("OrdersProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
